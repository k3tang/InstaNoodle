{"ast":null,"code":"// async function csrfFetch(url, options = {}) {\n//     options.method = options.method || 'GET';\n//     options.headers = options.headers || {};\n//     if (options.method.toUpperCase() !== 'GET') {\n//         options.headers['Content-Type'] =\n//             options.headers['Content-Type'] || 'application/json';\n//         options.headers['X-CSRF-Token'] = sessionStorage.getItem('X-CSRF-Token');\n//     }\n//     if (options.method.toUpperCase() !== 'GET') {\n//         options.headers['Content-Type'] =\n//             options.headers['Content-Type'] || 'application/json';\n//         options.headers['X-CSRF-Token'] = sessionStorage.getItem('X-CSRF-Token');\n//     }\n//     const res = await fetch(url, options);\n//     if (res.status >= 400) throw res;\n//     return res\n// }\n// export function storeCSRFToken(response){\n//     const csrfToken = response.headers.get('X-CSRF-Token');\n//     if (csrfToken) sessionStorage.setItem('X-CSRF-Token', csrfToken)\n// }\n// export async function restoreCSRF(){\n//     const response = await csrfFetch('/api/session')\n//     storeCSRFToken(response);\n//     return response;\n// }\n// export default csrfFetch;","map":{"version":3,"names":[],"sources":["/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/csrf.js"],"sourcesContent":["\n// async function csrfFetch(url, options = {}) {\n//     options.method = options.method || 'GET';\n//     options.headers = options.headers || {};\n\n//     if (options.method.toUpperCase() !== 'GET') {\n//         options.headers['Content-Type'] =\n//             options.headers['Content-Type'] || 'application/json';\n//         options.headers['X-CSRF-Token'] = sessionStorage.getItem('X-CSRF-Token');\n//     }\n\n//     if (options.method.toUpperCase() !== 'GET') {\n//         options.headers['Content-Type'] =\n//             options.headers['Content-Type'] || 'application/json';\n//         options.headers['X-CSRF-Token'] = sessionStorage.getItem('X-CSRF-Token');\n//     }\n\n//     const res = await fetch(url, options);\n\n//     if (res.status >= 400) throw res;\n\n//     return res\n\n\n// }\n// export function storeCSRFToken(response){\n//     const csrfToken = response.headers.get('X-CSRF-Token');\n//     if (csrfToken) sessionStorage.setItem('X-CSRF-Token', csrfToken)\n// }\n\n// export async function restoreCSRF(){\n//     const response = await csrfFetch('/api/session')\n//     storeCSRFToken(response);\n//     return response;\n// }\n\n// export default csrfFetch;"],"mappings":"AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}