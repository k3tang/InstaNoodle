{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nlet enhancer;\n\nif (process.env.Node_env === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n\n  const composeEnhancers = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","thunk","enhancer","process","env","Node_env","logger","require","default","composeEnhancers","window","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","configureStore","preloadedState","rootReducer"],"sources":["/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/index.js"],"sourcesContent":["import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\n\nlet enhancer;\n\nif (process.env.Node_env === 'production') {\n    enhancer = applyMiddleware(thunk);\n} else {\n    const logger = require('redux-logger').default;\n    const composeEnhancers = \n        window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\n    enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n    return createStore(rootReducer, preloadedState, enhancer)\n};\n\nexport default configureStore;"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,EAAuDC,OAAvD,QAAqE,OAArE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,IAAIC,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACvCH,QAAQ,GAAGH,eAAe,CAACE,KAAD,CAA1B;AACH,CAFD,MAEO;EACH,MAAMK,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;EACA,MAAMC,gBAAgB,GAClBC,MAAM,CAACC,kCAAP,IAA6CX,OADjD;EAEAE,QAAQ,GAAGO,gBAAgB,CAACV,eAAe,CAACE,KAAD,EAAQK,MAAR,CAAhB,CAA3B;AACH;;AAED,MAAMM,cAAc,GAAIC,cAAD,IAAoB;EACvC,OAAOhB,WAAW,CAACiB,WAAD,EAAcD,cAAd,EAA8BX,QAA9B,CAAlB;AACH,CAFD;;AAIA,eAAeU,cAAf"},"metadata":{},"sourceType":"module"}