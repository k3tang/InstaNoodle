[{"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/index.js":"1","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/App.js":"2","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/index.js":"3","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/csrf.js":"4","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/session.js":"5","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/LoginFormPage/index.js":"6","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/SignupFormPage/index.js":"7","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/Navigation/index.js":"8","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/HomePage/index.js":"9","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/UserProfilePage/index.js":"10","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/ProductsPage/index.js":"11","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/AboutPage/index.js":"12","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/RecipesIndex/index.js":"13","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/ProductListingPage/index.js":"14","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/products.js":"15","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/ProductShow/index.js":"16","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/cart.js":"17","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/CartIndexPage/index.js":"18","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/CartListingPage/index.js":"19","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/HomePage/scrolltwo.js":"20","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/HomePage/scrollthree.js":"21"},{"size":1257,"mtime":1662697633797,"results":"22","hashOfConfig":"23"},{"size":1765,"mtime":1662869682905,"results":"24","hashOfConfig":"23"},{"size":794,"mtime":1662682162871,"results":"25","hashOfConfig":"23"},{"size":1080,"mtime":1662511772983,"results":"26","hashOfConfig":"23"},{"size":2433,"mtime":1662930921226,"results":"27","hashOfConfig":"23"},{"size":3162,"mtime":1662929743628,"results":"28","hashOfConfig":"23"},{"size":3422,"mtime":1662929462374,"results":"29","hashOfConfig":"23"},{"size":3371,"mtime":1662931375136,"results":"30","hashOfConfig":"23"},{"size":1043,"mtime":1662961682356,"results":"31","hashOfConfig":"23"},{"size":965,"mtime":1662945737916,"results":"32","hashOfConfig":"23"},{"size":835,"mtime":1662791917338,"results":"33","hashOfConfig":"23"},{"size":234,"mtime":1662792034354,"results":"34","hashOfConfig":"23"},{"size":220,"mtime":1662791866381,"results":"35","hashOfConfig":"23"},{"size":738,"mtime":1662791938737,"results":"36","hashOfConfig":"23"},{"size":1395,"mtime":1662767328921,"results":"37","hashOfConfig":"23"},{"size":3423,"mtime":1662885183041,"results":"38","hashOfConfig":"23"},{"size":2576,"mtime":1662944665462,"results":"39","hashOfConfig":"23"},{"size":2283,"mtime":1662945572735,"results":"40","hashOfConfig":"23"},{"size":3083,"mtime":1662917145153,"results":"41","hashOfConfig":"23"},{"size":4877,"mtime":1662951086627,"results":"42","hashOfConfig":"23"},{"size":2843,"mtime":1662967944158,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1hntafm",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"47"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"47"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"47"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"47"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"47"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/index.js",[],[],[],"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/App.js",[],[],"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/index.js",[],[],"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/csrf.js",[],[],"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/session.js",[],[],"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/LoginFormPage/index.js",[],[],"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/SignupFormPage/index.js",["117"],[],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport './signupform.css';\nimport cartoon from \"../../assets/login-image.jpg\"\nimport { fetchCartItems } from \"../../store/cart\";\n\nfunction SignupFormPage() {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const [email, setEmail] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n\n    if (sessionUser) return <Redirect to=\"/account\" />;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (password === confirmPassword) {\n            setErrors([]);\n            return dispatch(sessionActions.signup({ email, name, password }))\n                .catch(async (res) => {\n                    let data;\n                    try {\n                        data = await res.clone().json();\n                    } catch {\n                        data = await res.text(); \n                    }\n                    if (data?.errors) setErrors(data.errors);\n                    else if (data) setErrors([data]);\n                    else setErrors([res.statusText]);\n                });\n        }\n        return setErrors(['Confirm Password field must be the same as the Password field']);\n    };\n\n    return (\n        <>\n        <div id=\"signup-component\">\n        <form id=\"signup-form\" onSubmit={handleSubmit}>\n            <h1 id=\"signup-header\">Create Account</h1>\n            <ul id=\"signup-errors\">\n                {errors.map(error => <li key={error}>{error}</li>)}\n            </ul>\n            <div className=\"signup-input\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                />\n            </div>\n            <div className=\"signup-input\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    required\n                />\n            </div>   \n            <div className=\"signup-input\">\n                <input\n                    type=\"Password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n            </div>\n            <div className=\"signup-input\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    required\n                />\n            </div>\n            <button type=\"submit\">Sign Up</button>\n            <div id=\"login-link\">\n                <NavLink to=\"/login\">Already have an account?</NavLink>\n            </div>\n        </form>\n        </div>\n        <img id=\"signup-cartoon\" src={cartoon} alt=\"cartoon-noodle-person\"/>\n        </>\n    );\n}\n\nexport default SignupFormPage;","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/Navigation/index.js",["118","119","120","121"],[],"import React from 'react';\nimport { NavLink, Redirect, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './navigation.css';\nimport noodleIcon from \"../../assets/ramen.png\";\nimport { useEffect } from 'react';\nimport { getCartItems, fetchCartItems } from '../../store/cart';\nimport { fetchProducts } from '../../store/products';\n\n\n\nexport const closeSidebar = () => {\n    let modal = document.getElementById(\"cart-index\");\n    let modalBackground = document.getElementById(\"modal-background\");\n    modal.style.display = \"none\";\n    modalBackground.style.display = \"none\";\n}\n\nexport const openSidebar = () => {\n    let modal = document.getElementById(\"cart-index\");\n    let modalBackground = document.getElementById(\"modal-background\");\n    modal.style.display = \"block\";\n    modalBackground.style.display = \"block\";\n}\n\nwindow.onclick = function (event) {\n    let modal = document.getElementById(\"cart-index\");\n    let modalBackground = document.getElementById(\"modal-background\");\n    if (event.target == modalBackground) {\n        modal.style.display = \"none\";\n        modalBackground.style.display = \"none\";\n    }\n}\n\nfunction Navigation() {\n    const sessionUser = sessionStorage.getItem(\"currentUser\")\n    const cartItems = useSelector(getCartItems);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        dispatch(fetchCartItems());\n        dispatch(fetchProducts());\n\n    }, [cartItems.length, sessionUser])\n\n    const color = () =>{\n        if (location.pathname === \"/\"){\n            return \"yellow\"\n        } else if (location.pathname === \"/about\") {\n            return \"pink\"\n        }\n    }\n\n    const itemsNum = () => {\n        let totalNum = 0;\n        if (!sessionUser) return totalNum;\n        \n        cartItems.forEach(cartItem => (\n            totalNum = totalNum + Number(cartItem.quantity)\n        ))\n        return totalNum;\n    }\n\n\n  return (\n    <>\n\n        <div id=\"links-icons\" className={color()}>\n        <div id=\"main-logo\">\n                  <div><NavLink exact to=\"/\">InstaNoodles</NavLink></div>\n                  <img src={noodleIcon} alt=\"noodle-icon\" />\n        </div>\n            <div id=\"nav-list\">\n                <div id=\"products-link\">\n                    <NavLink exact to=\"/products\">Shop Now</NavLink>\n                </div>\n                <div id=\"about-link\">\n                    <NavLink exact to=\"/about\">Our Story</NavLink>\n                </div>\n                <div id=\"recipes-link\">\n                    <NavLink exact to=\"/recipes\">#Sprucedupnoodz</NavLink>\n                </div>\n            </div>\n            <div id=\"nav-icons\">\n                <div id=\"account-link\">\n                    {sessionUser ?\n                        <NavLink exact to=\"/account\" className=\"fa-solid fa-user\" user={sessionUser}></NavLink> : <NavLink exact to=\"/login\" className=\"fa-solid fa-user\"></NavLink>\n                    }\n                </div>\n                <div className='cart-components'>\n                    <div id=\"cart-link\" onClick={openSidebar}\n                        className=\"fa-solid fa-cart-shopping\">\n                    </div>\n                    <div id=\"cart-number\">{itemsNum()}</div>\n                </div>\n            </div>\n        </div>\n          \n    </>\n  );\n}\n\nexport default Navigation;","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/HomePage/index.js",[],[],"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/UserProfilePage/index.js",["122"],[],"import React from \"react\";\nimport \"./userprofile.css\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {openSidebar} from \"../Navigation\"\nimport { fetchCartItems } from \"../../store/cart\";\n\n\nfunction UserProfile() {\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.session.user);\n    \n\n  \n\n    const logout = (e) => {\n        e.preventDefault();\n        dispatch(sessionActions.logout());\n    };\n\n\n    return !user ? (\n        <Redirect to=\"/\" /> ) : (\n            <>\n            <div id=\"profile-component\">\n                <h1>Hello, {user.name}</h1>\n                <div id=\"profile-buttons\">\n                    <button onClick={openSidebar}>Cart</button>\n                    <button onClick={logout}>Logout</button>\n                </div>\n            </div>\n            </>\n        )\n}\n\nexport default UserProfile;","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/ProductsPage/index.js",["123"],[],"import React, { useEffect } from \"react\";\nimport \"./product.css\";\nimport ProductListing from \"../ProductListingPage/index\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProducts,getProducts } from \"../../store/products\";\n\nconst ProductsIndex = () => {\n    const products = useSelector(getProducts);\n\n    const dispatch = useDispatch();\n\n    useEffect(()=> {\n        dispatch(fetchProducts())\n    },[])\n\n    const mapProducts = () => {\n        return products.map(product => (\n            <ProductListing key={product.id} product={product}/>\n        ))\n    }\n    \n    return (\n        <>\n            <h1 id=\"products-header\">Instant Gratification</h1>\n            <div id=\"product-listings\">\n                {mapProducts()}\n            </div>\n        </>\n        \n       \n    )\n}\n\nexport default ProductsIndex;\n","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/AboutPage/index.js",[],[],"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/RecipesIndex/index.js",[],[],"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/ProductListingPage/index.js",[],[],"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/products.js",[],[],"/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/ProductShow/index.js",["124","125","126"],[],"import { useSelector } from \"react-redux\";\nimport \"./productshow.css\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchProduct, getProduct } from \"../../store/products\";\nimport { useEffect, useState } from \"react\";\nimport { getCartItem, updateCartItem, createCartItem, fetchCartItems } from \"../../store/cart\";\nimport { openSidebar } from \"../Navigation\";\n\nconst ProductShow = () => {\n    const {productId} = useParams();\n    const dispatch = useDispatch();\n    const user = sessionStorage.getItem('currentUser')\n    const product = useSelector(getProduct(productId));\n    const item = useSelector(getCartItem(productId))\n    const [count, setCount] = useState(1);\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch(fetchProduct(productId))\n        dispatch(fetchCartItems())\n    }, [productId])\n\n    useEffect(() => {\n        dispatch(getCartItem(productId))\n      \n    },[item])\n\n    if (!product) return null;\n\n    const handleInput = () => {\n        let input = parseInt(document.getElementById(\"show-input\").value);\n        if (input > 0) {\n            setCount(input)\n        } else {\n            setCount(\"\")\n        }\n    }\n   \n    const {name, photoUrl, price, desc} = product;\n\n    //add to cart \n \n    const handleAddCart = (e) => {\n        e.preventDefault();\n        if (!user) return history.push(\"/signup\");\n        const userId = JSON.parse(user).id;\n\n        openSidebar();\n        if (!item ) {\n            const newItem = {\n                cartItem: {\n                    quantity: count,\n                    productId: Number(productId),\n                    userId: userId\n                }\n            }\n            return dispatch(createCartItem(newItem))\n        } else if (item) {\n            const updateItem = {\n                cartItem: {\n                    id: item.id,\n                    quantity: item.quantity + count,\n                    productId: Number(productId),\n                    userId: userId\n                }\n            }\n            return dispatch(updateCartItem(updateItem))\n        }\n    }\n    \n    return (\n        <>\n        <div id=\"show-component\">\n            <div id=\"show-picture\">\n                <img src={photoUrl} alt=\"product-picture\"/>\n            </div>\n            <div id=\"show-text-container\">\n                    <div id=\"show-name\">{name}</div>\n                    <div id=\"show-description\">{desc}</div>\n                    <div id=\"show-price\">${(Math.round(price * 100)/100).toFixed(2)}</div>\n                    <div id=\"show-quantity-container\">\n                        <label htmlFor=\"show-quantity-container\" id=\"show-label\">Select Quantity</label>\n                            <div className=\"show-quantity\">\n                              \n                            <button onClick={() => ((parseInt(count) - 1) > 0 ? setCount(parseInt(count) - 1) : setCount(1))}>-</button>\n                                <input type=\"text\" id=\"show-input\" value={count} onChange={handleInput}></input>\n                            <button onClick={() => setCount(parseInt(count) + 1)}>+</button>\n                              \n                            </div>\n                    </div>\n                    <button id=\"show-add-button\" onClick={handleAddCart}>Add to cart</button>\n            </div>    \n        </div>\n        </>\n    )\n}\n\nexport default ProductShow;","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/store/cart.js",["127","128"],[],"import csrfFetch from \"./csrf\";\n\nconst RECEIVE_ITEMS = 'cartItem/RECEIVE_ITEMS'\nconst RECEIVE_ITEM = 'cartItem/RECEIVE_ITEM';\nconst REMOVE_ITEM = 'cartItem/REMOVE_ITEM';\nconst RESET = 'cartItem/RESET';\n\nexport const receiveItems = (payload) => {\n    return {\n        type: RECEIVE_ITEMS,\n        payload\n    }\n}\n\nexport const receiveItem = (payload) => {\n    return {\n        type: RECEIVE_ITEM,\n        payload\n    };\n};\n\n\nexport const removeItem = (itemId) => {\n    return {\n        type: REMOVE_ITEM,\n        itemId\n    };\n};\n\n// selectors\n\nexport const getCartItems = state => { \n    if (!state.cartItems) {\n        return []\n    } else {\n        return Object.values(state.cartItems)\n    }\n}\n\nexport const getCartItem = productId => state => {\n    if (!state.cartItems) {\n        return null\n    } else {\n         return state.cartItems[productId]\n    }\n}\n\n// thunk action creators \n\nexport const fetchCartItems = () => async dispatch => {\n    const res = await csrfFetch('/api/cart_items')\n    const cartItems = await res.json();\n    dispatch(receiveItems(cartItems))\n}\n\n\nexport const createCartItem = (cartData) => async dispatch => {\n    const res = await csrfFetch('/api/cart_items', {\n        method: 'POST',\n        body: JSON.stringify(cartData),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    })\n    const cartItem = await res.json();\n    dispatch(receiveItem(cartItem))\n}\n\nexport const updateCartItem = (cartData) => async dispatch => {\n    const res = await csrfFetch(`/api/cart_items/${cartData.cartItem.id}`, {\n        method: 'PATCH',\n        body: JSON.stringify(cartData),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    })\n    const cartItem = await res.json();\n    dispatch(receiveItem(cartItem))\n}\n\nexport const deleteCartItem = (itemId) => async dispatch => {\n    const res = await csrfFetch(`/api/cart_items/${itemId}`, {\n        method: 'DELETE'\n    })\n    dispatch(removeItem(itemId))\n}\n\n// reducer - populates the view \n\nfunction cartReducer(state = {}, action) {\n    Object.freeze(state);\n    const nextState = {...state};\n\n    switch(action.type) {\n        case RECEIVE_ITEMS: \n            return action.payload.cartItems;\n        case RECEIVE_ITEM:\n           return {...nextState, ...action.payload.cartItem}\n        case REMOVE_ITEM: \n            delete nextState[action.itemId];\n            return nextState;\n        default:\n            return state;\n    }\n}\n\nexport default cartReducer;\n\n\n\n\n","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/CartIndexPage/index.js",["129","130"],[],"import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CartListing from '../CartListingPage';\nimport './cartindex.css'\nimport { fetchCartItems, getCartItems, deleteCartItem } from '../../store/cart';\nimport { fetchProducts } from '../../store/products';\nimport { closeSidebar } from '../Navigation';\nimport { useHistory } from 'react-router-dom';\nimport cartoon from \"../../assets/login-image.jpg\";\n\n\n\nconst Cart = () => {\n    const cartItems = useSelector(getCartItems);\n    const dispatch = useDispatch();\n    const user = sessionStorage.getItem(\"currentUser\");\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch(fetchCartItems())\n        dispatch(fetchProducts()) \n    }, [cartItems.length])\n\n    useEffect(() => {\n        dispatch(fetchCartItems())\n        dispatch(fetchProducts()) \n    },[user])\n\n    const mapCartItems = () => { \n        if (cartItems.length === 0) {\n            return \"Your cart is empty\"\n        } else {\n            return cartItems.map(cartItem => (\n                <CartListing key={cartItem.id} cartItem={cartItem} />\n            ))}\n    }\n\n    const deleteCart = () => {\n        return cartItems.map(cartItem => (\n            dispatch(deleteCartItem(cartItem.id))\n        ))\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        closeSidebar();\n        history.push(\"/login\");\n    }\n\n    const handleCheckout = (e) => {\n        e.preventDefault();\n        deleteCart();\n        closeSidebar();\n        history.push(\"/account\");\n    }\n\n    return (\n        <>\n        <div id='modal-background'></div>\n        <div id=\"cart-index\">\n                <div id=\"close-cart\" className=\"fa-solid fa-x\" onClick={closeSidebar}></div>\n                <h1 id=\"cart-header\">Cart Items</h1>\n                {(user && cartItems.length > 0) ? <button id=\"checkout-button\" onClick={handleCheckout}>Checkout</button> : null}\n                {user ? \n                <div id=\"cart-listings\">{mapCartItems()}</div> : \n                <>\n                    <img id=\"cart-cartoon\" src={cartoon} alt=\"ramen-cartoon\"/>\n                    <button id=\"cart-login\" onClick={handleLogin}>Login to cart</button>\n                </>}\n\n        </div>\n        </>\n    )\n}\n\nexport default Cart;","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/CartListingPage/index.js",["131","132"],[],"import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport './cartlisting.css'\nimport { fetchProduct, getProduct } from '../../store/products'\nimport { deleteCartItem, fetchCartItems, getCartItems, updateCartItem } from '../../store/cart'\nimport { useHistory } from 'react-router-dom'\n\n\nconst CartListing = ({cartItem}) => {\n    const {quantity, productId, id} = cartItem;\n    const dispatch = useDispatch();\n    const product = useSelector(getProduct(cartItem.productId));\n    const user = sessionStorage.getItem('currentUser');\n    const [count, setCount] = useState(quantity);\n    const [deleted, setDeleted] = useState(false);\n    const history = useHistory();\n   \n\n    useEffect(() => {\n        dispatch(fetchProduct(productId))\n        dispatch(fetchCartItems())\n    },[deleted])\n\n    if (!user) return history.push(\"/signup\");\n    if (!product) return null;\n    const {name, photoUrl, price} = product;\n\n    const handleDelete = (e) => {\n        e.preventDefault();\n        dispatch(deleteCartItem(id));\n        setDeleted(true);\n    }\n\n\n    const handleInput = () => {\n        let input = parseInt(document.getElementById(\"cart-input\").value);\n        console.log(input)\n        if (input > 0) {\n            setCount(input)\n        } else {\n            setCount(\"\")\n        }\n    }\n\n    const handleUpdate = () => {\n        const userId = JSON.parse(user).id;\n        const upCartItem = {\n            cartItem: {\n                id: id,\n                quantity: count,\n                productId: productId,\n                userId: userId\n            }\n        }\n        return dispatch(updateCartItem(upCartItem))\n    }\n    \n    return (\n        <>\n        <div id=\"cart-listing-wrapper\">\n            <img id=\"cart-listing-img\" src={photoUrl} alt=\"product\"/>\n            <div id=\"listing-text\">\n                <div className=\"listing-text-first\">\n                    <div id=\"listing-name\" className='listing-details'>{name}</div>\n                     <button id=\"cart-remove\" className=\"fa-solid fa-x\" value={quantity} onClick={handleDelete}></button>\n                </div>\n                <div id=\"listing-price\" className='listing-details'>${(Math.round((price) * 100) / 100).toFixed(2)}</div> \n                <div className=\"listing-amount\">\n                    <div className='listing-details'>Amount: {quantity}</div>\n                    <div className='listing-details' id=\"listing-subtotal\"> ${(Math.round((quantity * price) * 100) / 100).toFixed(2)}</div>\n                </div>\n                <div id=\"cart-quantity\" className='listing-details'>\n                    <div className='cart-update'>\n                        <input type=\"text\" id=\"cart-input\" \n                        placeholder={quantity} \n                        onChange={handleInput}></input>\n                        <button className='cart-update' id=\"cart-button\" onClick={handleUpdate}>Update Item</button>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n        </>\n  \n    )\n}\n\nexport default CartListing;","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/HomePage/scrolltwo.js",["133","134","135","136","137","138"],[],"import \"./scrolltwo.css\"\nimport press1 from \"../../assets/press-logos/press1.png\"\nimport press2 from \"../../assets/press-logos/press2.png\"\nimport press3 from \"../../assets/press-logos/press3.png\"\nimport press4 from \"../../assets/press-logos/press4.png\"\nimport press5 from \"../../assets/press-logos/press5.png\"\nimport press6 from \"../../assets/press-logos/press6.png\"\nimport press7 from \"../../assets/press-logos/press7.png\"\nimport feature1 from \"../../assets/feature-pics/feature1.png\"\nimport feature2 from \"../../assets/feature-pics/feature2.png\"\nimport feature3 from \"../../assets/feature-pics/feature3.png\"\nimport feature4 from \"../../assets/feature-pics/feature4.png\"\nimport feature5 from \"../../assets/feature-pics/feature5.png\"\nimport feature6 from \"../../assets/feature-pics/feature6.png\"\n\nconst ScrollTwo = () => {\n\nfunction mapPress(){\n    const images = [press1, press2, press3, press4, press5, press6, press7]\n    const newArr = []\n    for (let i = 0; i < 7; i++) {\n        let div = <img key={i} src={images[i]}alt=\"press-logo\" />\n        newArr.push(div)\n    }\n    return newArr\n}\n   \n\n    return (\n        <>\n            <div id=\"second-scroll-page\">\n                <div id=\"press-swiper-container\">\n                    <div className=\"all-press\">\n                        <div className=\"press\">\n                            {mapPress()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"noodle-container\">\n                <svg className=\"text-path\" viewBox=\"0 -20 425 100\">\n                    <path id=\"curve\" d=\"M0,0C76.72,0,76.72,49.11,153.43,49.11S230.15,0,306.87,0,383.58,49.11,460.3,49.11,537,0,613.74,0\"></path>\n                    <text x=\"-100\">\n                        <textPath href=\"#curve\" startOffset=\"50%\">\n                            <animate attributeName=\"startOffset\" values=\"-500;0\" dur=\"13s\" repeatCount=\"indefinite\"></animate>\n                            Not a normal noodle ~ Not a normal noodle ~ Not a normal noodle ~ Not a normal noodle ~  Not a normal noodle ~ Not a normal noodle ~ Not a normal noodle ~ Not a normal noodle ~\n                        </textPath>\n                    </text>\n                </svg>\n            </div>\n            <div className=\"grid-container\">\n                <div className=\"pure-g\">\n                    <div className=\"pure-u-1-2 pure-u-md-1-3 pure-u-lg-1-6\">\n                        <img src={feature1} className=\"feature-img\" alt=\"feature-picture\"/>\n                        <div className=\"feature-header\">NUTRITIONALLY\n                            COMPLETE</div>\n                        <div className=\"feature-text\">Balanced in protein, fibre, carbs, vitamins & minerals</div>\n                    </div>\n                    <div className=\"pure-u-1-2 pure-u-md-1-3 pure-u-lg-1-6\">\n                        <img src={feature2} className=\"feature-img\" alt=\"feature-picture\" />\n                        <div className=\"feature-header\">SUPER\n                            TASTY</div>\n                        <div className=\"feature-text\">Fresh flavours created by chef Carl Clarke</div>\n                    </div>\n                    <div className=\"pure-u-1-2 pure-u-md-1-3 pure-u-lg-1-6\">\n                        <img src={feature3} className=\"feature-img\" alt=\"feature-picture\" />\n                        <div className=\"feature-header\">PLANT\n                            BASED</div>\n                        <div className=\"feature-text\">We are 100% vegan but you don't have to be</div>\n                    </div>\n                    <div className=\"pure-u-1-2 pure-u-md-1-3 pure-u-lg-1-6\">\n                        <img src={feature4} className=\"feature-img\" alt=\"feature-picture\" />\n                        <div className=\"feature-header\">SUPER\n                            CONVENIENT</div>\n                        <div className=\"feature-text\">Just put the kettle on and add boiling water</div>\n                    </div>\n                    <div className=\"pure-u-1-2 pure-u-md-1-3 pure-u-lg-1-6\">\n                        <img src={feature5} className=\"feature-img\" alt=\"feature-picture\" />\n                        <div className=\"feature-header\">HEALTHY\n                            PLANET</div>\n                        <div className=\"feature-text\">Sustainable ingredients and recyclable packaging</div>\n                    </div>\n                    <div className=\"pure-u-1-2 pure-u-md-1-3 pure-u-lg-1-6\">\n                        <img src={feature6} className=\"feature-img\" alt=\"feature-picture\" />\n                        <div className=\"feature-header\">GOOD\n                            VALUE</div>\n                        <div className=\"feature-text\">Complete nutrition for just £3.75 per meal</div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ScrollTwo;","/Users/karentang/Desktop/App_Academy/InstaNoodles/frontend/src/component/HomePage/scrollthree.js",[],[],{"ruleId":"139","severity":1,"message":"140","line":7,"column":10,"nodeType":"141","messageId":"142","endLine":7,"endColumn":24},{"ruleId":"139","severity":1,"message":"143","line":2,"column":19,"nodeType":"141","messageId":"142","endLine":2,"endColumn":27},{"ruleId":"139","severity":1,"message":"144","line":2,"column":29,"nodeType":"141","messageId":"142","endLine":2,"endColumn":39},{"ruleId":"145","severity":1,"message":"146","line":29,"column":22,"nodeType":"147","messageId":"148","endLine":29,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":45,"column":8,"nodeType":"151","endLine":45,"endColumn":39,"suggestions":"152"},{"ruleId":"139","severity":1,"message":"140","line":7,"column":10,"nodeType":"141","messageId":"142","endLine":7,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":14,"column":7,"nodeType":"151","endLine":14,"endColumn":9,"suggestions":"153"},{"ruleId":"149","severity":1,"message":"150","line":22,"column":8,"nodeType":"151","endLine":22,"endColumn":19,"suggestions":"154"},{"ruleId":"149","severity":1,"message":"155","line":27,"column":7,"nodeType":"151","endLine":27,"endColumn":13,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":76,"column":17,"nodeType":"159","endLine":76,"endColumn":60},{"ruleId":"139","severity":1,"message":"160","line":6,"column":7,"nodeType":"141","messageId":"142","endLine":6,"endColumn":12},{"ruleId":"139","severity":1,"message":"161","line":84,"column":11,"nodeType":"141","messageId":"142","endLine":84,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":22,"column":8,"nodeType":"151","endLine":22,"endColumn":26,"suggestions":"162"},{"ruleId":"149","severity":1,"message":"150","line":27,"column":7,"nodeType":"151","endLine":27,"endColumn":13,"suggestions":"163"},{"ruleId":"139","severity":1,"message":"164","line":5,"column":42,"nodeType":"141","messageId":"142","endLine":5,"endColumn":54},{"ruleId":"149","severity":1,"message":"155","line":22,"column":7,"nodeType":"151","endLine":22,"endColumn":16,"suggestions":"165"},{"ruleId":"157","severity":1,"message":"158","line":54,"column":25,"nodeType":"159","endLine":54,"endColumn":92},{"ruleId":"157","severity":1,"message":"158","line":60,"column":25,"nodeType":"159","endLine":60,"endColumn":93},{"ruleId":"157","severity":1,"message":"158","line":66,"column":25,"nodeType":"159","endLine":66,"endColumn":93},{"ruleId":"157","severity":1,"message":"158","line":72,"column":25,"nodeType":"159","endLine":72,"endColumn":93},{"ruleId":"157","severity":1,"message":"158","line":78,"column":25,"nodeType":"159","endLine":78,"endColumn":93},{"ruleId":"157","severity":1,"message":"158","line":84,"column":25,"nodeType":"159","endLine":84,"endColumn":93},"no-unused-vars","'fetchCartItems' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useHistory' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["166"],["167"],["168"],"React Hook useEffect has missing dependencies: 'dispatch' and 'productId'. Either include them or remove the dependency array.",["169"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'RESET' is assigned a value but never used.","'res' is assigned a value but never used.",["170"],["171"],"'getCartItems' is defined but never used.",["172"],{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [cartItems.length, dispatch, sessionUser]",{"range":"187","text":"188"},"Update the dependencies array to be: [dispatch]",{"range":"189","text":"190"},"Update the dependencies array to be: [dispatch, productId]",{"range":"191","text":"192"},"Update the dependencies array to be: [dispatch, item, productId]",{"range":"193","text":"194"},"Update the dependencies array to be: [cartItems.length, dispatch]",{"range":"195","text":"196"},"Update the dependencies array to be: [dispatch, user]",{"range":"197","text":"198"},"Update the dependencies array to be: [deleted, dispatch, productId]",{"range":"199","text":"200"},[1491,1522],"[cartItems.length, dispatch, sessionUser]",[423,425],"[dispatch]",[873,884],"[dispatch, productId]",[963,969],"[dispatch, item, productId]",[741,759],"[cartItems.length, dispatch]",[860,866],"[dispatch, user]",[822,831],"[deleted, dispatch, productId]"]